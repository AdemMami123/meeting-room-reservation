---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: meeting-room-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: ademmami/user-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_URL
          value: postgresql://postgres:postgres@user-db-service:5432/user_db
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret-key
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: google-oauth-secrets
              key: client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: google-oauth-secrets
              key: client-secret
        - name: ADMIN_EMAILS
          valueFrom:
            secretKeyRef:
              name: google-oauth-secrets
              key: admin-emails
        - name: PORT
          value: "5000"
        - name: DEBUG
          value: "False"
        resources:
          limits:
            memory: "256Mi"
            cpu: "250m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /health/
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 20
---
# Room Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: room-service
  namespace: meeting-room-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: room-service
  template:
    metadata:
      labels:
        app: room-service
    spec:
      containers:
      - name: room-service
        image: ademmami/room-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        env:
        - name: DATABASE_URL
          value: postgresql://postgres:postgres@room-db-service:5432/room_db
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret-key
        - name: KAFKA_BROKER_URL
          value: kafka-service:9092
        - name: PORT
          value: "5001"
        - name: DEBUG
          value: "False"
        resources:
          limits:
            memory: "256Mi"
            cpu: "250m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /health/
            port: 5001
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 20
---
# Reservation Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation-service
  namespace: meeting-room-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: reservation-service
  template:
    metadata:
      labels:
        app: reservation-service
    spec:
      containers:
      - name: reservation-service
        image: ademmami/reservation-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
        env:
        - name: DATABASE_URL
          value: postgresql://postgres:postgres@reservation-db-service:5432/reservation_db
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret-key
        - name: KAFKA_BROKER_URL
          value: kafka-service:9092
        - name: PORT
          value: "5002"
        - name: DEBUG
          value: "False"
        resources:
          limits:
            memory: "256Mi"
            cpu: "250m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /health/
            port: 5002
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/
            port: 5002
          initialDelaySeconds: 30
          periodSeconds: 20
---
# User Service Service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: meeting-room-system
spec:
  selector:
    app: user-service
  ports:
  - port: 80
    targetPort: 5000
---
# Room Service Service
apiVersion: v1
kind: Service
metadata:
  name: room-service
  namespace: meeting-room-system
spec:
  selector:
    app: room-service
  ports:
  - port: 80
    targetPort: 5001
---
# Reservation Service Service
apiVersion: v1
kind: Service
metadata:
  name: reservation-service
  namespace: meeting-room-system
spec:
  selector:
    app: reservation-service
  ports:
  - port: 80
    targetPort: 5002
